name: Tests and checks

on:
  workflow_call:
    inputs:
      project_name:
        description: 'The name of the project'
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      COVERALLS_REPO_TOKEN:
        required: true
      QLTY_COVERAGE_TOKEN:
        required: true
      TRUNK_TOKEN:
        required: true

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build Docker image
        run: |
          docker build -t ${{ inputs.project_name }} .

      - name: Run tests
        run: |
          docker run --volume $(pwd):/app --workdir /app --rm ${{ inputs.project_name }} nox -s tests

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v5
        with:
          name: coverage-reports-${{ github.run_id }}
          path: |
            .coverage
            coverage.xml
            lcov.info
            junit.xml
          retention-days: 1

  # Coverage reports tasks
  coverage-reports:
    strategy:
      matrix:
        report:
          - qltysh
          - codecov
          - codecov-test
          - trunk-test
          - sonarqube
          - coveralls
    name: Upload Coverage Reports and Test Results
    needs: tests
    if: always()  # This ensures the job runs even if tests fail
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download coverage artifacts
        uses: actions/download-artifact@v6
        with:
          name: coverage-reports-${{ github.run_id }}
      
      # Qlty.sh
      - if: matrix.report == 'qltysh'
        uses: qltysh/qlty-action/coverage@main
        with:
          coverage-token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: lcov.info
      
      # Codecov
      - if: matrix.report == 'codecov'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      
      # Codecov test analysis
      - name: Upload test results to Codecov for analysis
        if: matrix.report == 'codecov-test'
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Trunk.io test analysis
      - name: Upload test results to Trunk.io
        if: matrix.report == 'trunk-test'
        uses: trunk-io/analytics-uploader@v2
        with:
          junit-paths: "junit.xml"        
          org-slug: nextgencontributions
          token: ${{ secrets.TRUNK_TOKEN }}
      
      # SonarQube
      - if: matrix.report == 'sonarqube'
        uses: SonarSource/sonarqube-scan-action@v6
        with:
          args: >
            -Dsonar.organization=nextgencontributions
            -Dsonar.projectKey=NextGenContributions_${{ inputs.project_name }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      # Coveralls
      - if: matrix.report == 'coveralls'
        uses: coverallsapp/github-action@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
