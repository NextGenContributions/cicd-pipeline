name: Tests and checks

on:
  workflow_call:
    inputs:
      project_name:
        description: 'The name of the project'
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      COVERALLS_REPO_TOKEN:
        required: true
      CC_TEST_REPORTER_ID:
        required: true

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ inputs.project_name }} .

      - name: Run tests
        run: |
          docker run --volume $(pwd):/app --workdir /app --rm ${{ inputs.project_name }} nox -s tests
      
      - name: Upload test results to Codecov for analysis
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            .coverage
            coverage.xml
            coverage.lcov
          retention-days: 1

  # Coverage reports group
  coverage-reports:
    strategy:
      matrix:
        report: [codeclimate, codecov, sonarqube, coveralls]
    name: Upload Coverage Reports
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
      
      # CodeClimate
      - if: matrix.report == 'codeclimate'
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      
      # Codecov
      - if: matrix.report == 'codecov'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      
      # SonarQube
      - if: matrix.report == 'sonarqube'
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.organization=nextgencontributions
            -Dsonar.projectKey="NextGenContributions_${{ inputs.project_name }}"
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      # Coveralls
      - if: matrix.report == 'coveralls'
        uses: coverallsapp/github-action@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
